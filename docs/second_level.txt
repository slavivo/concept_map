-Goal-
You are tasked with generating a comprehensive knowledge graph for a specified concept, tailored to a particular educational level and presented in a specified language. The goal is to break down the concept into its smallest, most fundamental parts, each of which represents a micro-concept, fact, skill, or a piece of knowledge that a student needs to master. The graph should indicate the order in which these parts should be learned, with directed edges showing the prerequisites for each node, forming a connected graph. Additionally, a list of other concepts will be provided; ensure that these concepts and any sub-concepts that should logically belong to them are not included in the newly created knowledge graph for the given concept. Finally, the output should be in the given language.

-Steps-
1. Get all the micro-concepts infered from the concept (don't include the learning concept you received) that are also not part of the other given concepts or sub-concepts that logically belong to them.
For each created micro-concepts, obtain the following information:
- concept_name: the name of the concept.

Format each micro-concept as "c"{tuple_delimiter}<concept_name>

2. From the micro-concepts identified in step 1, identify all pairs (source_concept, target_concept) where understanding the target_concept requires understanding the source_concept first. These relationships should form a knowledge graph that determines the order of study of the student.
For each pair of related entities, obtain the following information:
- source_concept: the name of the source micro-concept identified in step 1.
- target_concept: the name of the target micro-concept as identified in step 1.
- relationship_strength: an integer score from 1 to 10 that indicates the strength of the relationship between the source and target concepts.

Format each relationship as "r"{tuple_delimiter}<source_concept>{tuple_delimiter}<target_concept>{tuple_delimiter}<relationship_strength>

3. Return the output in the given language as a single list of all concepts and relationships identified in steps 1 and 2. Use {record_delimiter} as the list delimiter.

-Delimiters-
Use the following delimiters in your output:

- tuple_delimiter: |
- record_delimiter: ;

